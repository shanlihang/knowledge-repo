import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.Ii2o3pk_.js";const c=JSON.parse('{"title":"wsl 适用于 Windows 的 Linux 子系统","description":"","frontmatter":{},"headers":[],"relativePath":"environment/system/wsl.md","filePath":"environment/system/wsl.md"}'),l={name:"environment/system/wsl.md"};function e(h,s,d,p,r,k){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="wsl-适用于-windows-的-linux-子系统" tabindex="-1">wsl 适用于 Windows 的 Linux 子系统 <a class="header-anchor" href="#wsl-适用于-windows-的-linux-子系统" aria-label="Permalink to &quot;wsl 适用于 Windows 的 Linux 子系统&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><h3 id="什么是-wsl" tabindex="-1">什么是 wsl <a class="header-anchor" href="#什么是-wsl" aria-label="Permalink to &quot;什么是 wsl&quot;">​</a></h3><p>wsl（Windows Subsystem for Linux）：适用于 Windows 的 Linux 子系统，允许 Windows 用户在 Windows 操作系统上原生运行 Linux 环境，而无需使用虚拟机或双启动</p><h3 id="主要特性" tabindex="-1">主要特性 <a class="header-anchor" href="#主要特性" aria-label="Permalink to &quot;主要特性&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 无缝集成：双系统间应用程序之间的高度集成，轻松地调用两系统中的文件和程序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 支持</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Docker：完全支持</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 和容器化技术</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 网络支持：提供了完整的网络支持，包括</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DNS、防火墙和路由</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 性能优化：提供了更好的性能和更低的延迟，使得</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用程序运行更快</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">5.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安全性：提供了更好的安全性，包括用户权限和文件系统隔离</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">6.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 兼容性：兼容大多数</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用程序和工具，包括命令行工具、开发工具和桌面应用程序</span></span></code></pre></div><h3 id="wsl-1-与-wsl-2-的区别" tabindex="-1">WSL 1 与 WSL 2 的区别 <a class="header-anchor" href="#wsl-1-与-wsl-2-的区别" aria-label="Permalink to &quot;WSL 1 与 WSL 2 的区别&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>WSL 1</th><th>WSL 2</th></tr></thead><tbody><tr><td>Linux 内核</td><td>没有真正的 Linux 内核</td><td>使用真正的 Linux 内核</td></tr><tr><td>性能</td><td>性能较低，尤其是文件系统操作</td><td>性能更高，文件系统操作更快</td></tr><tr><td>兼容性</td><td>只支持部分 Linux 系统调用</td><td>支持更多的 Linux 系统调用，兼容性更好</td></tr><tr><td>容器支持</td><td>不支持容器化应用</td><td>完全支持 Docker 和容器化应用</td></tr><tr><td>系统调用支持</td><td>有部分系统调用不兼容</td><td>更全面支持 Linux 系统调用</td></tr></tbody></table><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><blockquote><p>仅 windows 系统需要 wsl，提供两种简易方式</p></blockquote><ol><li><code>Microsoft Store</code> 搜索 <code>Ubuntu</code> 选择何时版本进行下载</li><li>以 <code>管理员</code> 身份打开 PowerShell，输入下载指令</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><ol start="2"><li>下载完成后 <code>重启</code> ，会自动弹出弹窗，配置 <code>用户名</code> 及 <code>密码</code> 后即可完成安装</li><li>注意事项</li></ol><blockquote><ol><li>若重启后未出现弹窗，再次输入 <code>wsl --install</code> 即可</li><li>安装 <code>wsl</code> 需开启加速器</li><li>wsl 存储路径：<code>C:\\Users\\67490\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu_79rhkp1fndgsc\\LocalState</code></li></ol></blockquote><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="oh-my-zsh-终端工具" tabindex="-1">oh-my-zsh 终端工具 <a class="header-anchor" href="#oh-my-zsh-终端工具" aria-label="Permalink to &quot;oh-my-zsh 终端工具&quot;">​</a></h3><p>可参考 <a href="./../../tools/terminal/zsh.html">oh-my-zsh 安装及配置</a></p><h3 id="网络代理配置" tabindex="-1">网络代理配置 <a class="header-anchor" href="#网络代理配置" aria-label="Permalink to &quot;网络代理配置&quot;">​</a></h3><ol><li>在用户目录中创建文件<code>.wslconfig</code></li><li>填写以下内容</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[wsl2]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">networkingMode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mirrored</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autoProxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsTunneling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">firewall</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[experimental]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bestEffortDnsParsing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">useWindowsDnsCache</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span></code></pre></div>`,20)]))}const F=i(l,[["render",e]]);export{c as __pageData,F as default};
