import{_ as t,c as s,o as i,ag as n}from"./chunks/framework.Ii2o3pk_.js";const k=JSON.parse('{"title":"tailwindcss 手册","description":"","frontmatter":{},"headers":[],"relativePath":"tools/web/tailwindcss.md","filePath":"tools/web/tailwindcss.md"}'),e={name:"tools/web/tailwindcss.md"};function d(r,a,l,h,o,c){return i(),s("div",null,a[0]||(a[0]=[n(`<h1 id="tailwindcss-手册" tabindex="-1">tailwindcss 手册 <a class="header-anchor" href="#tailwindcss-手册" aria-label="Permalink to &quot;tailwindcss 手册&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><h3 id="什么是-tailwindcss" tabindex="-1">什么是 tailwindcss <a class="header-anchor" href="#什么是-tailwindcss" aria-label="Permalink to &quot;什么是 tailwindcss&quot;">​</a></h3><p>Tailwind CSS 是一个功能类优先的 CSS 框架，允许你直接在 <code>HTML/VUE/JSX/TSX</code> 等类型文件中使用类名快速构建响应式、组件化、主题一致的用户界面。</p><p>它不是传统意义上的 UI 组件库，而是一套设计系统的原子工具，鼓励你通过组合类名来构建自定义设计，而不是重写样式。</p><p>官网：<a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">英文文档</a> <a href="https://tailwindcss.cn/" target="_blank" rel="noreferrer">中文文档</a></p><h3 id="tailwind-的优势" tabindex="-1">Tailwind 的优势 <a class="header-anchor" href="#tailwind-的优势" aria-label="Permalink to &quot;Tailwind 的优势&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>描述</th></tr></thead><tbody><tr><td>🎯 <strong>原子化设计</strong></td><td>类名即样式，避免写 CSS，提升开发效率</td></tr><tr><td>🧩 <strong>高可维护性</strong></td><td>样式和结构耦合在一起，避免样式漂移</td></tr><tr><td>📱 <strong>响应式支持</strong></td><td>内置响应式前缀（如 <code>md:</code>, <code>lg:</code>），轻松适配多端</td></tr><tr><td>🎨 <strong>定制灵活</strong></td><td>完善的主题定制（色板、字体、间距等）</td></tr><tr><td>⚡ <strong>性能优化</strong></td><td>构建时自动清除未使用的 CSS，最终体积极小</td></tr><tr><td>🛠 <strong>生态丰富</strong></td><td>插件机制支持动画、表单、美化 Markdown 等</td></tr></tbody></table><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="umi-使用" tabindex="-1">umi 使用 <a class="header-anchor" href="#umi-使用" aria-label="Permalink to &quot;umi 使用&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Max项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tailwindcss</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Umi项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> umi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tailwindcss</span></span></code></pre></div>`,11)]))}const g=t(e,[["render",d]]);export{k as __pageData,g as default};
